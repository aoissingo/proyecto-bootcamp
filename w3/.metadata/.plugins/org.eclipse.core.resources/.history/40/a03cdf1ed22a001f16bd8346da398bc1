package com.banco.client.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.banco.client.model.Client;
import com.banco.client.repository.ClientRepository;

import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

@Service
public class ClientServiceImpl {

	@Autowired
    private ClientRepository clientRepository;

    @Override
    public Flux<Client> getAllClient() {
        return clientRepository.findAll();
    }

    @Override
    public Mono<Client> getClientById(String id) {
        return clientRepository.findById(id);
    }

    @Override
    public Mono<Client> createClient(Client client) {
        return clientRepository.save(client);
    }

    @Override
    public Mono<Client> updateClient(String id, Client customer) {
        return clientRepository.findById(id)
                .flatMap(existingCustomer -> {
                    existingCustomer.setName(customer.getName());
                    existingCustomer.setType(customer.getType());
                    existingCustomer.setEmail(customer.getEmail());
                    existingCustomer.setPhoneNumber(customer.getPhoneNumber());
                    return clientRepository.save(existingCustomer);
                });
    }

    @Override
    public Mono<Void> deleteClient(String id) {
        return clientRepository.deleteById(id);
    }
}
